CREATE TABLE Category(
catName VARCHAR(32) NOT NULL,
PRIMARY KEY (catName)
);

CREATE TABLE AllAccount(
id INT NOT NULL AUTO_INCREMENT,
username VARCHAR(32) NOT NULL UNIQUE,
pass VARCHAR(32) NOT NULL 
	CHECK(CHAR_LENGTH(pass) > 6),
email VARCHAR(32) NOT NULL UNIQUE
	CHECK (email LIKE '%@%.%'),
phoneNum CHAR(10) NOT NULL UNIQUE
	CHECK (phoneNum NOT LIKE '%[^0-9]%'),
secureQ VARCHAR(128) NOT NULL,
secureA VARCHAR(32) NOT NULL,
storeName VARCHAR(64),
sellerFlag BOOL NOT NULL,
userFlag BOOL NOT NULL,
PRIMARY KEY (id)
);

CREATE TABLE Product(
id INT NOT NULL AUTO_INCREMENT,
prodName VARCHAR(32) NOT NULL,
sellerID INT NOT NULL,
subtitle VARCHAR(64),
image VARCHAR(64),
descr VARCHAR(128),
price DECIMAL(10, 2) NOT NULL
	CHECK (price >= 0),
stock INT NOT NULL DEFAULT 0
	CHECK (stock >= 0),
prodStatus VARCHAR(32) NOT NULL DEFAULT 'Normal'
	CHECK (prodStatus IN ('Normal', 'On Sale', 'Out of Stock')),
viewCount INT NOT NULL DEFAULT 0
	CHECK (viewCount >= 0),
category VARCHAR(32) NOT NULL,
PRIMARY KEY (id),
UNIQUE (prodName, sellerID),
FOREIGN KEY (sellerID) REFERENCES AllAccount(id)
	ON DELETE NO ACTION ON UPDATE CASCADE,
FOREIGN KEY (category) REFERENCES Category(catName)
	ON DELETE NO ACTION ON UPDATE CASCADE
);

CREATE TABLE Comment(
id INT NOT NULL AUTO_INCREMENT,
userID INT NOT NULL,
prodID INT NOT NULL,
prodRating INT NOT NULL DEFAULT 5
	CHECK (prodRating BETWEEN 0 AND 10),
content VARCHAR(128),
PRIMARY KEY (id),
UNIQUE (userID, prodID),
FOREIGN KEY (userID) REFERENCES AllAccount(id)
	ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (prodID) REFERENCES Product(id)
	ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE UserLocation(
recipientAddress VARCHAR(64) NOT NULL,
recipientZIP CHAR(5) NOT NULL,
PRIMARY KEY (recipientAddress) 
);

CREATE TABLE ShippingInfo(
id INT NOT NULL AUTO_INCREMENT,
userID INT NOT NULL,
recipientAddress VARCHAR(64) NOT NULL,
recipientName VARCHAR(64) NOT NULL,
PRIMARY KEY (id),
UNIQUE (userID, recipientAddress),
FOREIGN KEY (userID) REFERENCES AllAccount(id)
	ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (recipientAddress) REFERENCES userLocation (recipientAddress)
	ON DELETE NO ACTION ON UPDATE CASCADE
);

CREATE TABLE PaymentInfo(
id INT NOT NULL AUTO_INCREMENT,
userID INT NOT NULL,
paymentMethod VARCHAR(32) NOT NULL,
paymentStatus VARCHAR(32) NOT NULL DEFAULT 'Processing'
	CHECK (paymentStatus IN ('Completed', 'Processing', 'Rejected')),
PRIMARY KEY (id),
UNIQUE (userID, paymentMethod),
FOREIGN KEY (userID) REFERENCES AllAccount (id)
	ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE OrderStatus(
id INT NOT NULL AUTO_INCREMENT,
userID INT NOT NULL,
shippedTime DATE,
finishedTime DATE,
orderStatus VARCHAR(32) NOT NULL DEFAULT 'Processing'
	CHECK (orderStatus IN ('Processing', 'Shipped', 'En route', 'delayed', 'Arrived')),
PRIMARY KEY (id),
UNIQUE (userID, shippedTime, finishedTime),
FOREIGN KEY (userID) REFERENCES AllAccount (id)
	ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE Orders(
id INT NOT NULL AUTO_INCREMENT,
userID INT NOT NULL,
createTime DATE NOT NULL DEFAULT (CURRENT_DATE),
deliveryFee INT NOT NULL DEFAULT 0
	CHECK (deliveryFee >= 0),
statusID INT NOT NULL,
paymentID INT NOT NULL,
shippingID INT NOT NULL,
PRIMARY KEY (id),
UNIQUE (userID, createTime),
FOREIGN KEY (userID) REFERENCES AllAccount (id)
	ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (statusID) REFERENCES OrderStatus (id)
	ON DELETE NO ACTION ON UPDATE CASCADE,
FOREIGN KEY (paymentID) REFERENCES PaymentInfo (id)
	ON DELETE NO ACTION ON UPDATE CASCADE,
FOREIGN KEY (shippingID) REFERENCES ShippingInfo (id)
	ON DELETE NO ACTION ON UPDATE CASCADE
);

CREATE TABLE OrderItem(
id INT NOT NULL AUTO_INCREMENT,
orderID INT NOT NULL,
prodID INT NOT NULL,
purchaseAmount INT NOT NULL DEFAULT 0
	CHECK (purchaseAmount >= 0),
PRIMARY KEY (id),
UNIQUE (orderID, prodID),
FOREIGN KEY (orderID) REFERENCES Orders (id)
	ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (prodID) REFERENCES Product (id)
	ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE CartItem(
id INT NOT NULL AUTO_INCREMENT,
userID INT NOT NULL,
prodID INT NOT NULL,
purchaseAmount INT NOT NULL DEFAULT 0
	CHECK (purchaseAmount >= 0),
PRIMARY KEY (id),
UNIQUE (userID, prodID),
FOREIGN KEY (userID) REFERENCES AllAccount (id)
	ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (prodID) REFERENCES Product (id)
	ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE WishlistItem(
id INT NOT NULL AUTO_INCREMENT,
userID INT NOT NULL,
prodID INT NOT NULL,
priceChanged BOOL NOT NULL DEFAULT FALSE,
priceChangedTime DATETIME,
PRIMARY KEY (id),
UNIQUE (userID, prodID),
FOREIGN KEY (userID) REFERENCES AllAccount (id)
	ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (prodID) REFERENCES Product (id)
	ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE TargetedAdvertisement (
id INT NOT NULL AUTO_INCREMENT,
userID INT NOT NULL,
prodID INT NOT NULL,
amountToShow INT NOT NULL DEFAULT 0
	CHECK (amountToShow >= 0),
PRIMARY KEY (id),
UNIQUE (userID, prodID),
FOREIGN KEY (userID) REFERENCES AllAccount (id)
	ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (prodID) REFERENCES Product (id)
	ON DELETE CASCADE ON UPDATE CASCADE
);
